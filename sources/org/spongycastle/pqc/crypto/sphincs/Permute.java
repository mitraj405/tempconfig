package org.spongycastle.pqc.crypto.sphincs;

import org.spongycastle.util.Pack;

class Permute {
    public static void a(byte[] bArr, byte[] bArr2) {
        int[] iArr = new int[16];
        for (int i = 0; i < 16; i++) {
            iArr[i] = Pack.f(i * 4, bArr2);
        }
        int i2 = iArr[0];
        int i3 = iArr[1];
        int i4 = iArr[2];
        int i5 = iArr[3];
        int i6 = iArr[4];
        int i7 = iArr[5];
        int i8 = iArr[6];
        int i9 = iArr[7];
        int i10 = iArr[8];
        int i11 = iArr[9];
        int i12 = iArr[10];
        int i13 = iArr[11];
        int i14 = iArr[12];
        int i15 = iArr[13];
        int i16 = iArr[14];
        int i17 = iArr[15];
        for (int i18 = 12; i18 > 0; i18 -= 2) {
            int i19 = i2 + i6;
            int i20 = i14 ^ i19;
            int i21 = (i20 >>> -16) | (i20 << 16);
            int i22 = i10 + i21;
            int i23 = i6 ^ i22;
            int i24 = (i23 >>> -12) | (i23 << 12);
            int i25 = i19 + i24;
            int i26 = i21 ^ i25;
            int i27 = (i26 >>> -8) | (i26 << 8);
            int i28 = i22 + i27;
            int i29 = i24 ^ i28;
            int i30 = (i29 >>> -7) | (i29 << 7);
            int i31 = i3 + i7;
            int i32 = i15 ^ i31;
            int i33 = (i32 >>> -16) | (i32 << 16);
            int i34 = i11 + i33;
            int i35 = i7 ^ i34;
            int i36 = (i35 >>> -12) | (i35 << 12);
            int i37 = i31 + i36;
            int i38 = i33 ^ i37;
            int i39 = (i38 >>> -8) | (i38 << 8);
            int i40 = i34 + i39;
            int i41 = i36 ^ i40;
            int i42 = (i41 >>> -7) | (i41 << 7);
            int i43 = i4 + i8;
            int i44 = i16 ^ i43;
            int i45 = (i44 >>> -16) | (i44 << 16);
            int i46 = i12 + i45;
            int i47 = i8 ^ i46;
            int i48 = (i47 >>> -12) | (i47 << 12);
            int i49 = i43 + i48;
            int i50 = i45 ^ i49;
            int i51 = (i50 >>> -8) | (i50 << 8);
            int i52 = i46 + i51;
            int i53 = i48 ^ i52;
            int i54 = (i53 >>> -7) | (i53 << 7);
            int i55 = i5 + i9;
            int i56 = i17 ^ i55;
            int i57 = (i56 >>> -16) | (i56 << 16);
            int i58 = i13 + i57;
            int i59 = i9 ^ i58;
            int i60 = (i59 >>> -12) | (i59 << 12);
            int i61 = i55 + i60;
            int i62 = i57 ^ i61;
            int i63 = (i62 >>> -8) | (i62 << 8);
            int i64 = i58 + i63;
            int i65 = i60 ^ i64;
            int i66 = (i65 >>> -7) | (i65 << 7);
            int i67 = i25 + i42;
            int i68 = i63 ^ i67;
            int i69 = (i68 >>> -16) | (i68 << 16);
            int i70 = i52 + i69;
            int i71 = i42 ^ i70;
            int i72 = (i71 >>> -12) | (i71 << 12);
            i2 = i67 + i72;
            int i73 = i69 ^ i2;
            i17 = (i73 >>> -8) | (i73 << 8);
            i12 = i70 + i17;
            int i74 = i72 ^ i12;
            i7 = (i74 >>> -7) | (i74 << 7);
            int i75 = i37 + i54;
            int i76 = i27 ^ i75;
            int i77 = (i76 >>> -16) | (i76 << 16);
            int i78 = i64 + i77;
            int i79 = i54 ^ i78;
            int i80 = (i79 >>> -12) | (i79 << 12);
            i3 = i75 + i80;
            int i81 = i77 ^ i3;
            i14 = (i81 >>> -8) | (i81 << 8);
            i13 = i78 + i14;
            int i82 = i80 ^ i13;
            i8 = (i82 >>> -7) | (i82 << 7);
            int i83 = i49 + i66;
            int i84 = i39 ^ i83;
            int i85 = (i84 >>> -16) | (i84 << 16);
            int i86 = i28 + i85;
            int i87 = i66 ^ i86;
            int i88 = (i87 >>> -12) | (i87 << 12);
            i4 = i83 + i88;
            int i89 = i85 ^ i4;
            i15 = (i89 >>> -8) | (i89 << 8);
            i10 = i86 + i15;
            int i90 = i88 ^ i10;
            i9 = (i90 >>> -7) | (i90 << 7);
            int i91 = i61 + i30;
            int i92 = i51 ^ i91;
            int i93 = (i92 >>> -16) | (i92 << 16);
            int i94 = i40 + i93;
            int i95 = i30 ^ i94;
            int i96 = (i95 >>> -12) | (i95 << 12);
            i5 = i91 + i96;
            int i97 = i93 ^ i5;
            i16 = (i97 >>> -8) | (i97 << 8);
            i11 = i94 + i16;
            int i98 = i96 ^ i11;
            i6 = (i98 >>> -7) | (i98 << 7);
        }
        iArr[0] = i2;
        iArr[1] = i3;
        iArr[2] = i4;
        iArr[3] = i5;
        iArr[4] = i6;
        iArr[5] = i7;
        iArr[6] = i8;
        iArr[7] = i9;
        iArr[8] = i10;
        iArr[9] = i11;
        iArr[10] = i12;
        iArr[11] = i13;
        iArr[12] = i14;
        iArr[13] = i15;
        iArr[14] = i16;
        iArr[15] = i17;
        for (int i99 = 0; i99 < 16; i99++) {
            Pack.e(iArr[i99], bArr, i99 * 4);
        }
    }
}
