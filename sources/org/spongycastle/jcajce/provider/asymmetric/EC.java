package org.spongycastle.jcajce.provider.asymmetric;

import java.util.HashMap;
import org.spongycastle.asn1.ASN1ObjectIdentifier;
import org.spongycastle.asn1.bsi.BSIObjectIdentifiers;
import org.spongycastle.asn1.eac.EACObjectIdentifiers;
import org.spongycastle.asn1.nist.NISTObjectIdentifiers;
import org.spongycastle.asn1.sec.SECObjectIdentifiers;
import org.spongycastle.asn1.teletrust.TeleTrusTObjectIdentifiers;
import org.spongycastle.asn1.x9.X9ObjectIdentifiers;
import org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi;
import org.spongycastle.jcajce.provider.config.ConfigurableProvider;
import org.spongycastle.jcajce.provider.util.AsymmetricAlgorithmProvider;
import org.spongycastle.util.Properties;

public class EC {
    public static final HashMap a;

    public static class Mappings extends AsymmetricAlgorithmProvider {
        public final void a(ConfigurableProvider configurableProvider) {
            ConfigurableProvider configurableProvider2 = configurableProvider;
            configurableProvider2.b("AlgorithmParameters.EC", "org.spongycastle.jcajce.provider.asymmetric.ec.AlgorithmParametersSpi");
            HashMap hashMap = EC.a;
            configurableProvider2.e("KeyAgreement.ECDH", hashMap);
            configurableProvider2.b("KeyAgreement.ECDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DH");
            configurableProvider2.e("KeyAgreement.ECDHC", hashMap);
            configurableProvider2.b("KeyAgreement.ECDHC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC");
            configurableProvider2.e("KeyAgreement.ECCDH", hashMap);
            configurableProvider2.b("KeyAgreement.ECCDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHC");
            StringBuilder sb = new StringBuilder("KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier = X9ObjectIdentifiers.V0;
            StringBuilder D = C1058d.D(sb, aSN1ObjectIdentifier, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier2 = X9ObjectIdentifiers.W0;
            StringBuilder D2 = C1058d.D(D, aSN1ObjectIdentifier2, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA1KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier3 = SECObjectIdentifiers.H;
            StringBuilder D3 = C1058d.D(D2, aSN1ObjectIdentifier3, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA224KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier4 = SECObjectIdentifiers.L;
            StringBuilder D4 = C1058d.D(D3, aSN1ObjectIdentifier4, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA224KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier5 = SECObjectIdentifiers.I;
            StringBuilder D5 = C1058d.D(D4, aSN1ObjectIdentifier5, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA256KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier6 = SECObjectIdentifiers.M;
            StringBuilder D6 = C1058d.D(D5, aSN1ObjectIdentifier6, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA256KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier7 = SECObjectIdentifiers.J;
            StringBuilder D7 = C1058d.D(D6, aSN1ObjectIdentifier7, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA384KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier8 = SECObjectIdentifiers.N;
            StringBuilder D8 = C1058d.D(D7, aSN1ObjectIdentifier8, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA384KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier9 = SECObjectIdentifiers.K;
            StringBuilder D9 = C1058d.D(D8, aSN1ObjectIdentifier9, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA512KDFAndSharedInfo", "KeyAgreement.");
            ASN1ObjectIdentifier aSN1ObjectIdentifier10 = SECObjectIdentifiers.O;
            C1058d.I(D9, aSN1ObjectIdentifier10, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$CDHwithSHA512KDFAndSharedInfo");
            configurableProvider2.b("KeyAgreement.ECDHWITHSHA1KDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1KDF");
            configurableProvider2.b("KeyAgreement.ECCDHWITHSHA1CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA1CKDF");
            configurableProvider2.b("KeyAgreement.ECCDHWITHSHA256CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA256CKDF");
            configurableProvider2.b("KeyAgreement.ECCDHWITHSHA384CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA384CKDF");
            configurableProvider2.b("KeyAgreement.ECCDHWITHSHA512CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$DHwithSHA512CKDF");
            ASN1ObjectIdentifier aSN1ObjectIdentifier11 = X9ObjectIdentifiers.q0;
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier11, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier2, "EC", new KeyFactorySpi.EC());
            ASN1ObjectIdentifier aSN1ObjectIdentifier12 = X9ObjectIdentifiers.X0;
            String str = "KeyAgreement.";
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier12, "ECMQV", new KeyFactorySpi.ECMQV());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier3, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier4, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier5, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier6, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier7, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier8, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier9, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier10, "EC", new KeyFactorySpi.EC());
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier11, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier2, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier3, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier4, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier5, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier6, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier7, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier8, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier9, configurableProvider2);
            AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier10, configurableProvider2);
            if (!Properties.b("org.spongycastle.ec.disable_mqv")) {
                configurableProvider2.b("KeyAgreement.ECMQV", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQV");
                configurableProvider2.b("KeyAgreement.ECMQVWITHSHA1CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1CKDF");
                configurableProvider2.b("KeyAgreement.ECMQVWITHSHA224CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA224CKDF");
                configurableProvider2.b("KeyAgreement.ECMQVWITHSHA256CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA256CKDF");
                configurableProvider2.b("KeyAgreement.ECMQVWITHSHA384CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA384CKDF");
                configurableProvider2.b("KeyAgreement.ECMQVWITHSHA512CKDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA512CKDF");
                String str2 = str;
                configurableProvider2.b(str2 + aSN1ObjectIdentifier12, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA1KDFAndSharedInfo");
                StringBuilder sb2 = new StringBuilder(str2);
                ASN1ObjectIdentifier aSN1ObjectIdentifier13 = SECObjectIdentifiers.P;
                StringBuilder D10 = C1058d.D(sb2, aSN1ObjectIdentifier13, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA224KDFAndSharedInfo", str2);
                ASN1ObjectIdentifier aSN1ObjectIdentifier14 = SECObjectIdentifiers.Q;
                StringBuilder D11 = C1058d.D(D10, aSN1ObjectIdentifier14, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA256KDFAndSharedInfo", str2);
                ASN1ObjectIdentifier aSN1ObjectIdentifier15 = SECObjectIdentifiers.R;
                StringBuilder D12 = C1058d.D(D11, aSN1ObjectIdentifier15, configurableProvider2, "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA384KDFAndSharedInfo", str2);
                ASN1ObjectIdentifier aSN1ObjectIdentifier16 = SECObjectIdentifiers.S;
                D12.append(aSN1ObjectIdentifier16);
                configurableProvider2.b(D12.toString(), "org.spongycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi$MQVwithSHA512KDFAndSharedInfo");
                AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier, "EC", new KeyFactorySpi.EC());
                AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier12, configurableProvider2);
                AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier13, "ECMQV", new KeyFactorySpi.ECMQV());
                AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier14, configurableProvider2);
                AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier14, "ECMQV", new KeyFactorySpi.ECMQV());
                AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier13, configurableProvider2);
                AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier15, "ECMQV", new KeyFactorySpi.ECMQV());
                AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier15, configurableProvider2);
                AsymmetricAlgorithmProvider.c(configurableProvider2, aSN1ObjectIdentifier16, "ECMQV", new KeyFactorySpi.ECMQV());
                AsymmetricAlgorithmProvider.e("EC", aSN1ObjectIdentifier16, configurableProvider2);
                configurableProvider2.b("KeyFactory.ECMQV", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECMQV");
                configurableProvider2.b("KeyPairGenerator.ECMQV", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECMQV");
            }
            configurableProvider2.b("KeyFactory.EC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$EC");
            configurableProvider2.b("KeyFactory.ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDSA");
            configurableProvider2.b("KeyFactory.ECDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDH");
            configurableProvider2.b("KeyFactory.ECDHC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi$ECDHC");
            configurableProvider2.b("KeyPairGenerator.EC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC");
            configurableProvider2.b("KeyPairGenerator.ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDSA");
            configurableProvider2.b("KeyPairGenerator.ECDH", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH");
            configurableProvider2.b("KeyPairGenerator.ECDHWITHSHA1KDF", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH");
            configurableProvider2.b("KeyPairGenerator.ECDHC", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDHC");
            configurableProvider2.b("KeyPairGenerator.ECIES", "org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$ECDH");
            configurableProvider2.b("Cipher.ECIES", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIES");
            configurableProvider2.b("Cipher.ECIESwithAES-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC");
            configurableProvider2.b("Cipher.ECIESWITHAES-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithAESCBC");
            configurableProvider2.b("Cipher.ECIESwithDESEDE-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC");
            configurableProvider2.b("Cipher.ECIESWITHDESEDE-CBC", "org.spongycastle.jcajce.provider.asymmetric.ec.IESCipher$ECIESwithDESedeCBC");
            configurableProvider2.b("Signature.ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA");
            configurableProvider2.b("Signature.NONEwithECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSAnone");
            configurableProvider2.b("Alg.Alias.Signature.SHA1withECDSA", "ECDSA");
            configurableProvider2.b("Alg.Alias.Signature.ECDSAwithSHA1", "ECDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA1WITHECDSA", "ECDSA");
            configurableProvider2.b("Alg.Alias.Signature.ECDSAWITHSHA1", "ECDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA1WithECDSA", "ECDSA");
            configurableProvider2.b("Alg.Alias.Signature.ECDSAWithSHA1", "ECDSA");
            configurableProvider2.b("Alg.Alias.Signature.1.2.840.10045.4.1", "ECDSA");
            C1058d.I(new StringBuilder("Alg.Alias.Signature."), TeleTrusTObjectIdentifiers.g, configurableProvider2, "ECDSA");
            configurableProvider2.b("Signature.ECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA");
            configurableProvider2.b("Signature.SHA1WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA");
            configurableProvider2.b("Signature.SHA224WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA224");
            configurableProvider2.b("Signature.SHA256WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA256");
            configurableProvider2.b("Signature.SHA384WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA384");
            configurableProvider2.b("Signature.SHA512WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSA512");
            configurableProvider2.b("Signature.SHA3-224WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSASha3_224");
            configurableProvider2.b("Signature.SHA3-256WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSASha3_256");
            configurableProvider2.b("Signature.SHA3-384WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSASha3_384");
            configurableProvider2.b("Signature.SHA3-512WITHECDDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDetDSASha3_512");
            configurableProvider2.b("Alg.Alias.Signature.DETECDSA", "ECDDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA1WITHDETECDSA", "SHA1WITHECDDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA224WITHDETECDSA", "SHA224WITHECDDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA256WITHDETECDSA", "SHA256WITHECDDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA384WITHDETECDSA", "SHA384WITHECDDSA");
            configurableProvider2.b("Alg.Alias.Signature.SHA512WITHDETECDSA", "SHA512WITHECDDSA");
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA224", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA224", X9ObjectIdentifiers.s0);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA256", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA256", X9ObjectIdentifiers.t0);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA384", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA384", X9ObjectIdentifiers.u0);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA512", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSA512", X9ObjectIdentifiers.v0);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA3-224", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSASha3_224", NISTObjectIdentifiers.X);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA3-256", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSASha3_256", NISTObjectIdentifiers.Y);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA3-384", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSASha3_384", NISTObjectIdentifiers.Z);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA3-512", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSASha3_512", NISTObjectIdentifiers.a0);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "RIPEMD160", "ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecDSARipeMD160", TeleTrusTObjectIdentifiers.h);
            configurableProvider2.b("Signature.SHA1WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR");
            configurableProvider2.b("Signature.SHA224WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR224");
            configurableProvider2.b("Signature.SHA256WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR256");
            configurableProvider2.b("Signature.SHA384WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR384");
            configurableProvider2.b("Signature.SHA512WITHECNR", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecNR512");
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA1", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA", EACObjectIdentifiers.b);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA224", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224", EACObjectIdentifiers.c);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA256", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256", EACObjectIdentifiers.d);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA384", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384", EACObjectIdentifiers.e);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA512", "CVC-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512", EACObjectIdentifiers.f);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA1", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA", BSIObjectIdentifiers.a);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA224", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA224", BSIObjectIdentifiers.b);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA256", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA256", BSIObjectIdentifiers.c);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA384", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA384", BSIObjectIdentifiers.d);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "SHA512", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecCVCDSA512", BSIObjectIdentifiers.e);
            AsymmetricAlgorithmProvider.b(configurableProvider2, "RIPEMD160", "PLAIN-ECDSA", "org.spongycastle.jcajce.provider.asymmetric.ec.SignatureSpi$ecPlainDSARP160", BSIObjectIdentifiers.f);
        }
    }

    static {
        HashMap hashMap = new HashMap();
        a = hashMap;
        hashMap.put("SupportedKeyClasses", "java.security.interfaces.ECPublicKey|java.security.interfaces.ECPrivateKey");
        hashMap.put("SupportedKeyFormats", "PKCS#8|X.509");
    }
}
